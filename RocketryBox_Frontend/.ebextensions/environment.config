option_settings:
  aws:elasticbeanstalk:application:environment:
    NODE_ENV: production
    CI: true
    NPM_USE_PRODUCTION: false
    NPM_CONFIG_UNSAFE_PERM: true
    
  aws:elasticbeanstalk:container:nodejs:
    NodeCommand: "npm start"
    NodeVersion: 18.19.0
    GzipCompression: true
    ProxyServer: nginx
    
  aws:elasticbeanstalk:container:nodejs:staticfiles:
    /static: dist/static
    /assets: dist/assets
    /images: dist/images
    /icons: dist/icons

  aws:autoscaling:launchconfiguration:
    IamInstanceProfile: aws-elasticbeanstalk-ec2-role
    
  aws:elasticbeanstalk:healthreporting:system:
    SystemType: enhanced
    
  aws:elasticbeanstalk:application:
    Application Healthcheck URL: /

commands:
  01_node_install:
    command: |
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
      . ~/.nvm/nvm.sh
      nvm install 18.19.0
      nvm use 18.19.0
      nvm alias default 18.19.0
    ignoreErrors: true

container_commands:
  01_install_dependencies:
    command: "npm ci --production=false"
    cwd: "/var/app/ondeck"
  02_fetch_ssm_parameters:
    command: |
      export AWS_DEFAULT_REGION=ap-south-1
      
      # Fetch parameters and set environment variables
      VITE_BACKEND_URL=$(aws ssm get-parameter --name "/Rocketry_Box02/frontend/VITE_BACKEND_URL" --with-decryption --query 'Parameter.Value' --output text 2>/dev/null || echo "")
      GOOGLE_MAPS_API_KEY=$(aws ssm get-parameter --name "/Rocketry_Box02/frontend/GOOGLE_MAPS_API_KEY" --with-decryption --query 'Parameter.Value' --output text 2>/dev/null || echo "")
      TINYMCE_API_KEY=$(aws ssm get-parameter --name "/Rocketry_Box02/frontend/TINYMCE_API_KEY" --with-decryption --query 'Parameter.Value' --output text 2>/dev/null || echo "")
      VITE_SHOPIFY_CLIENT_ID=$(aws ssm get-parameter --name "/Rocketry_Box02/frontend/VITE_SHOPIFY_CLIENT_ID" --with-decryption --query 'Parameter.Value' --output text 2>/dev/null || echo "")
      
      # Export to environment file for build process
      if [ ! -z "$VITE_BACKEND_URL" ]; then echo "VITE_BACKEND_URL=${VITE_BACKEND_URL}" >> /var/app/ondeck/.env; fi
      if [ ! -z "$GOOGLE_MAPS_API_KEY" ]; then echo "GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}" >> /var/app/ondeck/.env; fi
      if [ ! -z "$TINYMCE_API_KEY" ]; then echo "TINYMCE_API_KEY=${TINYMCE_API_KEY}" >> /var/app/ondeck/.env; fi
      if [ ! -z "$VITE_SHOPIFY_CLIENT_ID" ]; then echo "VITE_SHOPIFY_CLIENT_ID=${VITE_SHOPIFY_CLIENT_ID}" >> /var/app/ondeck/.env; fi
    cwd: "/var/app/ondeck"
  03_build_app:
    command: "npm run build"
    cwd: "/var/app/ondeck"
  04_create_health_endpoint:
    command: |
      mkdir -p /var/app/ondeck/dist
      echo '{"status":"healthy","service":"rocketrybox-frontend","timestamp":"'$(date -Iseconds)'"}' > /var/app/ondeck/dist/health.json
    cwd: "/var/app/ondeck" 