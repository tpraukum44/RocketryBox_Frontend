name: Deploy Frontend to AWS S3

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create environment file
      run: |
        echo "VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}" >> .env
        echo "GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" >> .env
        echo "TINYMCE_API_KEY=${{ secrets.TINYMCE_API_KEY }}" >> .env
        echo "VITE_SHOPIFY_CLIENT_ID=${{ secrets.VITE_SHOPIFY_CLIENT_ID }}" >> .env
        
    - name: Build application
      run: npm run build
      
    - name: Create health check file
      run: |
        echo '{"status":"healthy","service":"rocketrybox-frontend","timestamp":"'$(date -Iseconds)'"}' > dist/health.json
        
    - name: Configure AWS credentials
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
        
    - name: Deploy to S3
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        aws s3 sync dist/ s3://${{ secrets.AWS_S3_BUCKET }}/ \
          --delete \
          --cache-control "public, max-age=31536000" \
          --exclude "*.html" \
          --exclude "health.json"
        
        # Set different cache headers for HTML files (no cache)
        aws s3 sync dist/ s3://${{ secrets.AWS_S3_BUCKET }}/ \
          --exclude "*" \
          --include "*.html" \
          --cache-control "no-cache, no-store, must-revalidate"
          
        # Set cache headers for health.json
        aws s3 cp dist/health.json s3://${{ secrets.AWS_S3_BUCKET }}/health.json \
          --cache-control "no-cache"
        
    - name: Invalidate CloudFront Distribution
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        if [ -n "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          echo "Invalidating CloudFront distribution..."
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
        else
          echo "CloudFront distribution ID not configured, skipping invalidation"
        fi 
